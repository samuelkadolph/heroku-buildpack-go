#!/usr/bin/env ruby

$:.unshift(File.expand_path("../../lib", __FILE__))
require "go/commands/compile"

build, cache = ARGV.shift(2)
Go::Commands::Compile.new(build: build, cache: cache).run

# #!/bin/bash -e

# BUILD="$1"
# CACHE="$2"
# BUILDPACK="$(dirname $(dirname $0))"

# GO="1.0.2"
# GOARCHIVE="http://go.googlecode.com/files/go$GO.linux-amd64.tar.gz"
# export GOROOT="$CACHE/go/go-$GO"
# export GOPATH="$BUILD/.go"
# export PATH="$GOROOT/bin:$BUILDPACK/bin:$PATH"

# indent() {
#   sed -u "s/^/       /"
# }

# install_go() {
#   rm -rf "$CACHE/go"
#   mkdir -p "$CACHE/go"
#   (
#     cd "$CACHE/go"
#     echo -n "-----> Fetching Go $GO... "
#     curl -s -o - "$GOARCHIVE" | tar -zxf -
#     mv "go" "$GOROOT"
#     echo "done"
#   )
# }

# [[ -d "$GOROOT" ]] || install_go

# echo "-----> Building Go app"

# mkdir -p "$GOPATH/src/app"
# cp -r "$BUILD"/* "$GOPATH/src/app"

# (
#   cd "$GOPATH/src"
#   go get "./app" | indent
#   go install "./app" | indent
# )

# mkdir -p "$BUILD/bin"
# mv "$GOPATH/bin"/* "$BUILD/bin"

# rm -rf "$GOPATH"
